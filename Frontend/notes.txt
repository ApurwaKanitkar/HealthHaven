To create a web dashboard that displays health metrics such as heart rate, SpO2 level, and body temperature measured by sensors, you will need a combination of hardware and software technologies. Here's an overview:

1. **Hardware Technologies:**
   - **Sensors:** You'll need sensors capable of measuring heart rate, SpO2 level (blood oxygen saturation), and body temperature. There are various sensor options available in the market, such as pulse oximeters for SpO2, thermometers for temperature, and heart rate monitors for heart rate.
   - **Microcontroller/Embedded Platform:** You'll need a microcontroller or embedded platform to interface with the sensors and transmit the data to your web application. Popular options include Arduino, Raspberry Pi, or specialized microcontroller boards with wireless capabilities (like ESP8266 or ESP32).

2. **Software Technologies:**

   **Front-end Technologies:**
   - **HTML/CSS/JavaScript:** For building the user interface of the web dashboard.
   - **Front-end Framework/Library:** Optional, but using a framework like React, Angular, or Vue.js can simplify complex UI interactions and data management.

   **Back-end Technologies:**
   - **Node.js/Express.js:** For building the back-end server that handles data processing, storage, and serves the API endpoints for the front end to consume.
   - **Database:** You may need a database to store historical sensor data for analysis and visualization. Options include SQL databases like MySQL or PostgreSQL, or NoSQL databases like MongoDB.
   
   **Communication Technologies:**
   - **Wireless Communication:** Depending on your setup, you may need wireless communication protocols like Bluetooth, Wi-Fi, or Zigbee to connect your sensors to the microcontroller or embedded platform.
   - **APIs:** You may need to develop or integrate APIs for communicating between the front end and back end of your web application.

   **Data Visualization:**
   - **Charting Libraries:** You'll need libraries like Chart.js, D3.js, or Plotly.js to visualize the sensor data in the form of charts and graphs on the dashboard.

3. **Integration and Development:**
   - Integrate sensor modules with your chosen microcontroller or embedded platform.
   - Develop firmware or software to read data from sensors, process it, and transmit it to the server.
   - Develop the front-end and back-end components of the web dashboard.
   - Implement data visualization using charting libraries.
   - Test the entire system for functionality, reliability, and scalability.

Remember to consider security aspects, such as data encryption, authentication, and authorization, especially when dealing with sensitive health data. Additionally, ensure compliance with relevant regulations such as HIPAA (Health Insurance Portability and Accountability Act) if applicable.